#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
"""

import os
from rag_system import EnhancedRAGSystem
from dotenv import load_dotenv

load_dotenv()

def test_rag_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RAG —Å–∏—Å—Ç–µ–º—ã
    try:
        rag = EnhancedRAGSystem()
        print("‚úÖ RAG —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = rag.get_system_stats()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
        print(f"   –í–µ–∫—Ç–æ—Ä–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: {stats.get('total_vectors', 0)}")
        print(f"   –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å: {stats.get('index_dimension', 0)}")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RAG —Å–∏—Å—Ç–µ–º—ã: {e}")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    test_questions = [
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ?",
        "–ö–∞–∫–∏–µ –ø—Ä–∞–≤–∞ –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –∏–º—É—â–µ—Å—Ç–≤–∞?",
        "–ö–∞–∫ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –¥–æ–≥–æ–≤–æ—Ä –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏?",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä?",
        "–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è –±—Ä–∞–∫–∞?",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ –∑–∞–∫–æ–Ω—É?",
        "–ö–∞–∫–∏–µ –≤–∏–¥—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –ø—Ä–∞–≤–µ?",
        "–ö–∞–∫ –∑–∞—â–∏—â–∞—é—Ç—Å—è –ø—Ä–∞–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π?",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å?",
        "–ö–∞–∫–∏–µ –ø—Ä–∞–≤–∞ –∏–º–µ–µ—Ç —Ä–∞–±–æ—Ç–Ω–∏–∫ –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏?"
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∏ –æ—Ç–≤–µ—Ç–æ–≤:")
    print("-" * 60)
    
    for i, question in enumerate(test_questions, 1):
        print(f"\n{i}. –í–æ–ø—Ä–æ—Å: {question}")
        print("-" * 40)
        
        try:
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
            result = rag.query(question)
            
            # –í—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞
            print(f"ü§ñ –û—Ç–≤–µ—Ç: {result['answer']}")
            
            # –í—ã–≤–æ–¥ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            if result.get('sources'):
                print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(result['sources'])}")
            
            # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {result.get('results_count', 0)}")
            print(f"üìè –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {result.get('context_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞: {e}")
        
        print()

def test_specific_legal_questions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("=" * 60)
    
    try:
        rag = EnhancedRAGSystem()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É
    specific_questions = [
        {
            "question": "–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç —Å—Ç–∞—Ç—å—è 1 –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –∫–æ–¥–µ–∫—Å–∞ –†–ö?",
            "description": "–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏"
        },
        {
            "question": "–ö–∞–∫–∏–µ –ø—Ä–∞–≤–∞ –∏–º–µ–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–∞?",
            "description": "–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ø—Ä–∞–≤—É"
        },
        {
            "question": "–ö–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –¥–µ–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞?",
            "description": "–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º—É –ø—Ä–∞–≤—É"
        },
        {
            "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –∫–∞–∫ –æ–Ω–æ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç?",
            "description": "–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ø—Ä–∞–≤—É"
        },
        {
            "question": "–ö–∞–∫–∏–µ –≤–∏–¥—ã —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ?",
            "description": "–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –ø—Ä–∞–≤—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"
        }
    ]
    
    for i, q_data in enumerate(specific_questions, 1):
        print(f"\n{i}. {q_data['description']}")
        print(f"–í–æ–ø—Ä–æ—Å: {q_data['question']}")
        print("-" * 50)
        
        try:
            result = rag.query(q_data['question'])
            
            print(f"ü§ñ –û—Ç–≤–µ—Ç: {result['answer']}")
            
            if result.get('sources'):
                print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(result['sources'])}")
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            if result.get('search_results'):
                print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:")
                for j, doc in enumerate(result['search_results'][:3], 1):
                    print(f"   {j}. {doc['source']} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {doc['score']:.3f})")
                    print(f"      {doc['text']}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print()

def test_conversation_context():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"""
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
    print("=" * 60)
    
    try:
        rag = EnhancedRAGSystem()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –°–µ—Ä–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    conversation = [
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ?",
        "–ê –∫–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∞?",
        "–ö–∞–∫ —ç—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤ –¥–æ–≥–æ–≤–æ—Ä–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
        "–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –ø—Ä–∞–≤–µ"
    ]
    
    print("üí¨ –°–µ—Ä–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:")
    
    for i, question in enumerate(conversation, 1):
        print(f"\n{i}. –í–æ–ø—Ä–æ—Å: {question}")
        print("-" * 40)
        
        try:
            result = rag.query(question)
            print(f"ü§ñ –û—Ç–≤–µ—Ç: {result['answer']}")
            
            if result.get('sources'):
                print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(result['sources'])}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    print(f"\nüìú –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ({len(rag.conversation_history)} –∑–∞–ø–∏—Å–µ–π):")
    for i, turn in enumerate(rag.conversation_history, 1):
        print(f"   {i}. {turn.user_query[:50]}...")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è RAG —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = ['OPENAI_API_KEY', 'PINECONE_API_KEY', 'PINECONE_INDEX_NAME']
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        return
    
    print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    try:
        test_rag_system()
        test_specific_legal_questions()
        test_conversation_context()
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    main() 