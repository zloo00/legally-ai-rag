import pandas as pd
import time
from dotenv import load_dotenv
import os

from legal_chat import LegalChatBot

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
INPUT_FILE = "jurhelp_questions.xlsx"
OUTPUT_FILE = "test_rag_only.xlsx"

df = pd.read_excel(INPUT_FILE)

# 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ RAG)
chatbot = LegalChatBot(model="gpt-4")

# 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ RAG, –ø–µ—Ä–≤—ã–µ 5)
rag_answers = []

# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 –≤–æ–ø—Ä–æ—Å–æ–≤
test_df = df.head(5)

for i, row in enumerate(test_df.itertuples(index=False), start=1):
    q = str(getattr(row, "–í–æ–ø—Ä–æ—Å"))
    print(f"[{i}/5] {q[:60]}...")
    
    try:
        # –¢–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç RAG
        rag_result = chatbot.get_legal_answer(q)
        rag_answers.append(rag_result["answer"])
        print(f"  RAG: {rag_result['answer'][:100]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        if rag_result.get("sources"):
            print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {rag_result['sources']}")
        
    except Exception as e:
        print(f"  –û—à–∏–±–∫–∞: {e}")
        rag_answers.append("–û—à–∏–±–∫–∞")
    
    print()

# 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
test_df = test_df.copy()
test_df["–û—Ç–≤–µ—Ç_RAG"] = rag_answers

test_df.to_excel(OUTPUT_FILE, index=False)
print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {OUTPUT_FILE}")
print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(test_df)} –≤–æ–ø—Ä–æ—Å–æ–≤")

# 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
stats = chatbot.get_system_stats()
print(f"  –í–µ–∫—Ç–æ—Ä–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ: {stats.get('total_vectors', 0)}")
print(f"  –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –∏–Ω–¥–µ–∫—Å–∞: {stats.get('index_dimension', 0)}") 